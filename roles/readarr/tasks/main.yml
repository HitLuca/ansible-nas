---
- name: Start Readarr
  block:
    - name: Create Readarr Directories
      file:
        path: "{{ item }}"
        state: directory
      with_items:
        - "{{ readarr_data_directory }}"

    - name: Readarr
      docker_container:
        name: readarr
        image: linuxserver/readarr:develop
        pull: true
        volumes:
          - "{{ readarr_books_directory }}:/books:rw"
          - "{{ readarr_download_directory }}:/downloads:rw"
          - "{{ readarr_data_directory }}:/config:rw"
        ports:
          - "{{ readarr_port }}:8787"
        env:
          TZ: "{{ ansible_nas_timezone }}"
          PUID: "{{ readarr_user_id }}"
          PGID: "{{ readarr_group_id }}"
        restart_policy: unless-stopped
        memory: "{{ readarr_memory }}"
        labels:
          traefik.enable: "{{ readarr_available_externally | string }}"
          traefik.http.routers.readarr.rule: "Host(`{{ readarr_hostname }}.{{ ansible_nas_domain }}`)"
          traefik.http.routers.readarr.tls.certresolver: "letsencrypt"
          traefik.http.routers.readarr.tls.domains[0].main: "{{ ansible_nas_domain }}"
          traefik.http.routers.readarr.tls.domains[0].sans: "*.{{ ansible_nas_domain }}"
          traefik.http.services.readarr.loadbalancer.server.port: "7878"
  when: readarr_enabled is true

- name: Stop Readarr
  block:
    - name: Stop Readarr
      docker_container:
        name: "{{ readarr_container_name }}"
        state: absent
  when: readarr_enabled is false
